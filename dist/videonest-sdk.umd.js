!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("debug"),require("react")):"function"==typeof define&&define.amd?define(["exports","debug","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).VideonestSDK={},e.debugModule,e.React)}(this,(function(e,t,n){"use strict";function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function i(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var s=o(t),a=i(n);let r=!1;const d=s.default("videonest-sdk");const c=function(e,...t){r&&d(e,...t)};function l(e,...t){r&&(console.log(`[videonest-sdk] ${e}`,...t),d(e,...t))}class u{constructor(e){this.config=e,c("VideonestClient initialized with channelId:",e.channelId)}async uploadVideo(e,t){l("Starting video upload process"),l(`File: ${e.name}, size: ${e.size} bytes`);try{const{metadata:n,chunkSize:o=2097152,onProgress:i=()=>{},thumbnail:s}=t;if(!s)throw l("Error: Thumbnail is required"),new Error("Thumbnail is required for video upload");l("Upload options:",{metadata:n,chunkSize:o,hasThumbnail:!!s});const a=this.generateUUID(),r=Math.ceil(e.size/o);l(`Generated uploadId: ${a}, total chunks: ${r}`);const d={...n,channelId:this.config.channelId};l("Upload metadata:",d);for(let t=0;t<r;t++){const n=t*o,s=Math.min(n+o,e.size),c=e.slice(n,s),u=new FormData;if(u.append("chunk",c),u.append("uploadId",a),u.append("chunkIndex",t.toString()),u.append("totalChunks",r.toString()),u.append("fileName",e.name),u.append("fileSize",e.size.toString()),0===t&&d&&(u.append("channelId",d.channelId.toString()),d.title&&u.append("title",d.title),d.description&&u.append("description",d.description),d.tags)){const e=Array.isArray(d.tags)?d.tags.join(","):d.tags;e&&e.length>0&&u.append("tags",e)}l(`Uploading chunk ${t+1}/${r} (${n}-${s} bytes)`);const h=await fetch("https://api1.videonest.co/sdk/upload-chunk",{method:"POST",body:u,headers:{Authorization:`Bearer ${this.config.apiKey}`,"X-Channel-ID":this.config.channelId.toString()}});l(`Chunk ${t+1} response status: ${h.status}`);const p=await h.json();if(l(`Chunk ${t+1} upload result:`,p),!p.success)throw l(`Chunk ${t+1} upload failed: ${p.message}`),new Error(p.message||"Chunk upload failed");const f=(t+1)/r*100;l(`Upload progress: ${f.toFixed(2)}%`),i(f)}l("All chunks uploaded. Finalizing upload...");const c={fileName:e.name,uploadId:a,totalChunks:r.toString()};l("Finalize request data:",c);const u=await fetch("https://api1.videonest.co/sdk/finalize",{method:"POST",body:JSON.stringify(c),headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`,"X-Channel-ID":this.config.channelId.toString()}});l(`Finalize response status: ${u.status}`);const h=await u.json();if(l("Finalize response data:",h),!h.success)throw l(`Finalization failed: ${h.message}`),new Error(h.message||"Upload finalization failed");return l("Upload successfully finalized"),l("Uploading user-provided thumbnail"),await this.uploadThumbnail(s,h.video.id),l("Upload process completed successfully"),h}catch(e){return l(`Upload error: ${e instanceof Error?e.message:"Unknown error"}`,e),{success:!1,message:e instanceof Error?e.message:"An unexpected error occurred during upload"}}}async uploadThumbnail(e,t){const n=new FormData;n.append("thumbnail",e);try{const e=await fetch(`https://api1.videonest.co/sdk/videos/${t}/send-thumbnail`,{method:"POST",body:n,headers:{Authorization:`Bearer ${this.config.apiKey}`,"X-Channel-ID":this.config.channelId.toString()}}),o=await e.json();if(!o.success)throw new Error(o.message||"Thumbnail upload failed");return o}catch(e){throw new Error(e instanceof Error?e.message:"Failed to upload thumbnail")}}generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}async getVideoStatus(e){try{const t=await fetch(`https://api1.videonest.co/sdk/videos/${e}/status`,{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`,"X-Channel-ID":this.config.channelId.toString()}}),n=await t.json();if(!n.success)throw new Error(n.message||"Failed to get video status");return n}catch(e){throw new Error(e instanceof Error?e.message:"Failed to get video status")}}async listVideos(){c("Fetching videos for channel ID:",this.config.channelId);try{const e=await fetch("https://api1.videonest.co/sdk/videos",{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`,"X-Channel-ID":this.config.channelId.toString()}});c(`Videos list response status: ${e.status}`);const t=await e.json();return c("Videos list response data:",t),t.success?(c(`Successfully retrieved ${t.videos?t.videos.length:0} videos`),t):(c(`Videos list fetch failed: ${t.message||"Unknown error"}`),{success:!1,message:t.message||"Failed to retrieve videos"})}catch(e){return c(`Videos list error: ${e instanceof Error?e.message:"Unknown error"}`,e),{success:!1,message:e instanceof Error?e.message:"Failed to retrieve videos"}}}}e.VideonestEmbed=({videoId:e,config:t,style:n={}})=>{const{primaryColor:o,secondaryColor:i,darkMode:s,width:r,height:d,showTitle:c,showDescription:l}=n;let u=`https://app.videonest.co/embed/single/${e}`;const h=[];return o&&h.push(`primary_color=${o.replace("#","")}`),i&&h.push(`secondary_color=${i.replace("#","")}`),s&&h.push("dark_mode=true"),r&&h.push(`width=${r}`),d&&h.push(`height=${d}`),c&&h.push("show_title=true"),l&&h.push("show_description=true"),h.push(`channel_id=${t.channelId}`),h.push(`api_key=${t.apiKey}`),h.length>0&&(u+=`?${h.join("&")}`),a.createElement("div",{style:{position:"relative",width:n.width||"100%",height:0,paddingBottom:"56.25%"}},a.createElement("iframe",{src:u,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,title:`Videonest video ${e}`}))},e.getVideoStatus=async function(e,t){return new u(t).getVideoStatus(e)},e.isDebugModeEnabled=function(){return r},e.listVideos=async function(e){return new u(e).listVideos()},e.setDebugMode=function(e){r=e,e?(s.default.enable("videonest-sdk"),"undefined"!=typeof window&&window.localStorage.setItem("debug","videonest-sdk"),console.log("[videonest-sdk] Debug mode enabled")):(s.default.disable(),"undefined"!=typeof window&&window.localStorage.removeItem("debug"))},e.uploadVideo=async function(e,t,n){return new u(n).uploadVideo(e,t)},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=videonest-sdk.umd.js.map
