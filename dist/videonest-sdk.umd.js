!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).VideonestSDK={})}(this,(function(e){"use strict";let t;"undefined"==typeof window&&(t=require("fluent-ffmpeg"));class n{constructor(e){this.authenticated=!1,this.config=e}async authenticate(){try{const e=await fetch("https://api1.videonest.co/auth/verify-api-key",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({channelId:this.config.channelId,apiKey:this.config.apiKey})}),t=await e.json();return t.success?(this.authenticated=!0,{success:!0,message:"Authentication successful"}):(this.authenticated=!1,{success:!1,message:t.message||"Authentication failed"})}catch(e){return this.authenticated=!1,{success:!1,message:e instanceof Error?e.message:"Authentication failed"}}}async uploadVideo(e,t){this.checkAuthentication();try{const{metadata:n,chunkSize:i=2097152,onProgress:a=()=>{},thumbnail:o,autoGenerateThumbnail:r=!1}=t,s=this.generateUUID(),c=Math.ceil(e.size/i),d={...n,channelId:n.channelId||this.config.channelId};for(let t=0;t<c;t++){const n=t*i,o=Math.min(n+i,e.size),r=e.slice(n,o),h=new FormData;if(h.append("chunk",r),h.append("uploadId",s),h.append("chunkIndex",t.toString()),h.append("totalChunks",c.toString()),h.append("fileName",e.name),h.append("fileSize",e.size.toString()),0===t&&d&&(h.append("channelId",d.channelId.toString()),d.title&&h.append("title",d.title),d.description&&h.append("description",d.description),d.tags)){const e=Array.isArray(d.tags)?d.tags.join(","):d.tags;e&&e.length>0&&h.append("tags",e)}const u=await fetch("https://api1.videonest.co/upload/videos/upload-chunk",{method:"POST",body:h,headers:{Authorization:`Bearer ${this.config.apiKey}`}}),l=await u.json();if(!l.success)throw new Error(l.message||"Chunk upload failed");a((t+1)/c*100)}const h={fileName:e.name,uploadId:s,totalChunks:c.toString()},u=await fetch("https://api1.videonest.co/videos/finalize",{method:"POST",body:JSON.stringify(h),headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`}}),l=await u.json();if(!l.success)throw new Error(l.message||"Upload finalization failed");if(o)await this.uploadThumbnail(d.channelId,o,l.video.id);else if(r)try{const t=await this.createThumbnailFromVideo(e);await this.uploadThumbnail(d.channelId,t,l.video.id)}catch(e){console.warn("Failed to generate thumbnail:",e)}return l}catch(e){return{success:!1,message:e instanceof Error?e.message:"An unexpected error occurred during upload"}}}checkAuthentication(){if(!this.authenticated)throw new Error("Not authenticated. Call authenticate() first.")}async uploadThumbnail(e,t,n){this.checkAuthentication();const i=new FormData;i.append("thumbnail",t);try{const e=await fetch(`https://api1.videonest.co/download/videos/${n}/send-thumbnail`,{method:"POST",body:i,headers:{Authorization:`Bearer ${this.config.apiKey}`}}),t=await e.json();if(!t.success)throw new Error(t.message||"Thumbnail upload failed");return t}catch(e){throw new Error(e instanceof Error?e.message:"Failed to upload thumbnail")}}generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}async createThumbnailFromVideo(e){return"undefined"!=typeof window&&"undefined"!=typeof document?this.createThumbnailInBrowser(e):this.createThumbnailInNode(e)}async createThumbnailInBrowser(e){return new Promise(((t,n)=>{const i=document.createElement("video");i.preload="metadata",i.muted=!0,i.playsInline=!0;const a=URL.createObjectURL(e);i.src=a,i.onloadedmetadata=()=>{i.currentTime=Math.min(2,i.duration)},i.onseeked=()=>{try{const o=document.createElement("canvas"),r=o.getContext("2d");if(!r)return void n(new Error("Failed to get canvas context"));o.width=i.videoWidth,o.height=i.videoHeight,r.drawImage(i,0,0,o.width,o.height),o.toBlob((i=>{if(!i)return void n(new Error("Failed to create thumbnail blob"));URL.revokeObjectURL(a);const o=new File([i],`${e.name.split(".")[0]}_thumbnail.jpg`,{type:"image/jpeg"});t(o)}),"image/jpeg",.95)}catch(e){n(e)}},i.onerror=()=>{URL.revokeObjectURL(a),n(new Error("Error loading video for thumbnail generation"))},i.load()}))}async createThumbnailInNode(e){return new Promise(((n,i)=>{if(!t)return void i(new Error("fluent-ffmpeg is required for Node.js thumbnail generation. Install it with: npm install fluent-ffmpeg"));const a=require("os"),o=require("path"),r=require("fs"),s=a.tmpdir(),c=o.join(s,e.name),d=o.join(s,`${o.parse(e.name).name}_thumbnail.jpg`);r.writeFileSync(c,Buffer.from(e)),t(c).screenshots({timestamps:[2],filename:o.basename(d),folder:o.dirname(d),size:"?x?"}).on("end",(()=>{try{const e=r.readFileSync(d),t=new File([e],o.basename(d),{type:"image/jpeg"});r.unlinkSync(c),r.unlinkSync(d),n(t)}catch(e){i(e)}})).on("error",(e=>{r.existsSync(c)&&r.unlinkSync(c),i(e)}))}))}async getVideoStatus(e){this.checkAuthentication();try{const t=await fetch(`https://api1.videonest.co/videos/${e}/status`,{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`}}),n=await t.json();if(!n.success)throw new Error(n.message||"Failed to get video status");return n}catch(e){throw new Error(e instanceof Error?e.message:"Failed to get video status")}}}let i=null;function a(){if(!i)throw new Error("SDK not initialized. Call authVideonest() first.");return i}e.VideonestClient=n,e.authVideonest=async function(e,t){return i=new n({channelId:e,apiKey:t}),await i.authenticate()},e.getClient=a,e.getVideoStatus=async function(e){return a().getVideoStatus(e)},e.uploadVideo=async function(e,t){return a().uploadVideo(e,t)},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=videonest-sdk.umd.js.map
