!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("debug"),require("react")):"function"==typeof define&&define.amd?define(["exports","debug","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).VideonestSDK={},e.debugModule,e.React)}(this,(function(e,t,n){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function a(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var i=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var s=i(t),o=a(n);let r=!1;const d=s.default("videonest-sdk");const c=function(e,...t){r&&d(e,...t)};function u(e,...t){r&&(console.log(`[videonest-sdk] ${e}`,...t),d(e,...t))}class h{constructor(e){this.authenticated=!1,this.channelId=0,this.config=e}async authenticate(){u("Authenticating with Videonest API..."),u("Configuration:",{channelId:this.config.channelId,apiKeyProvided:!!this.config.apiKey});try{u("Making authentication request to https://api1.videonest.co/sdk/authenticate"),u("Authentication request data:",{channelId:this.config.channelId,apiKey:this.config.apiKey});const e=await fetch("https://api1.videonest.co/sdk/authenticate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({channelId:this.config.channelId,apiKey:this.config.apiKey})});u(`Authentication response status: ${e.status}`);const t=await e.json();return u("Authentication response data:",t),t.success?(u("Authentication successful"),this.authenticated=!0,this.channelId=this.config.channelId,{success:!0,message:"Authentication successful"}):(u(`Authentication failed: ${t.message||"Unknown error"}`),this.authenticated=!1,{success:!1,message:t.message||"Authentication failed"})}catch(e){return c(`Authentication error: ${e instanceof Error?e.message:"Unknown error"}`,e),this.authenticated=!1,{success:!1,message:e instanceof Error?e.message:"Authentication failed"}}}async uploadVideo(e,t){u("Starting video upload process"),u(`File: ${e.name}, size: ${e.size} bytes`),this.checkAuthentication();try{const{metadata:n,chunkSize:i=2097152,onProgress:a=()=>{},thumbnail:s}=t;if(!s)throw u("Error: Thumbnail is required"),new Error("Thumbnail is required for video upload");u("Upload options:",{metadata:n,chunkSize:i,hasThumbnail:!!s});const o=this.generateUUID(),r=Math.ceil(e.size/i);u(`Generated uploadId: ${o}, total chunks: ${r}`);const d={...n,channelId:n.channelId||this.config.channelId};u("Upload metadata:",d);for(let t=0;t<r;t++){const n=t*i,s=Math.min(n+i,e.size),c=e.slice(n,s),h=new FormData;if(h.append("chunk",c),h.append("uploadId",o),h.append("chunkIndex",t.toString()),h.append("totalChunks",r.toString()),h.append("fileName",e.name),h.append("fileSize",e.size.toString()),0===t&&d&&(h.append("channelId",d.channelId.toString()),d.title&&h.append("title",d.title),d.description&&h.append("description",d.description),d.tags)){const e=Array.isArray(d.tags)?d.tags.join(","):d.tags;e&&e.length>0&&h.append("tags",e)}u(`Uploading chunk ${t+1}/${r} (${n}-${s} bytes)`);const l=await fetch(`https://api1.videonest.co/sdk/${this.channelId.toString()}/upload-chunk`,{method:"POST",body:h,headers:{Authorization:`Bearer ${this.config.apiKey}`}});u(`Chunk ${t+1} response status: ${l.status}`);const p=await l.json();if(u(`Chunk ${t+1} upload result:`,p),!p.success)throw u(`Chunk ${t+1} upload failed: ${p.message}`),new Error(p.message||"Chunk upload failed");const f=(t+1)/r*100;u(`Upload progress: ${f.toFixed(2)}%`),a(f)}u("All chunks uploaded. Finalizing upload...");const c={fileName:e.name,uploadId:o,totalChunks:r.toString()};u("Finalize request data:",c);const h=await fetch(`https://api1.videonest.co/sdk/${this.channelId.toString()}/finalize`,{method:"POST",body:JSON.stringify(c),headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`}});u(`Finalize response status: ${h.status}`);const l=await h.json();if(u("Finalize response data:",l),!l.success)throw u(`Finalization failed: ${l.message}`),new Error(l.message||"Upload finalization failed");return u("Upload successfully finalized"),u("Uploading user-provided thumbnail"),await this.uploadThumbnail(s,l.video.id),u("Upload process completed successfully"),l}catch(e){return u(`Upload error: ${e instanceof Error?e.message:"Unknown error"}`,e),{success:!1,message:e instanceof Error?e.message:"An unexpected error occurred during upload"}}}checkAuthentication(){if(u("Authentication check. Current status: "+(this.authenticated?"authenticated":"not authenticated")),!this.authenticated)throw u("Authentication check failed. Throwing error."),new Error("Not authenticated. Call authenticate() first.");u("Authentication check passed")}async uploadThumbnail(e,t){this.checkAuthentication();const n=new FormData;n.append("thumbnail",e);try{const e=await fetch(`https://api1.videonest.co/sdk/${this.channelId.toString()}/videos/${t}/send-thumbnail`,{method:"POST",body:n,headers:{Authorization:`Bearer ${this.config.apiKey}`}}),i=await e.json();if(!i.success)throw new Error(i.message||"Thumbnail upload failed");return i}catch(e){throw new Error(e instanceof Error?e.message:"Failed to upload thumbnail")}}generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}async getVideoStatus(e){this.checkAuthentication();try{const t=await fetch(`https://api1.videonest.co/sdk/${this.channelId.toString()}/videos/${e}/status`,{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`}}),n=await t.json();if(!n.success)throw new Error(n.message||"Failed to get video status");return n}catch(e){throw new Error(e instanceof Error?e.message:"Failed to get video status")}}async listVideos(){this.checkAuthentication(),c("Fetching videos for channel ID:",this.channelId);try{const e=await fetch(`https://api1.videonest.co/sdk/${this.channelId.toString()}/videos`,{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`}});c(`Videos list response status: ${e.status}`);const t=await e.json();return c("Videos list response data:",t),t.success?(c(`Successfully retrieved ${t.videos?t.videos.length:0} videos`),t):(c(`Videos list fetch failed: ${t.message||"Unknown error"}`),{success:!1,message:t.message||"Failed to retrieve videos"})}catch(e){return c(`Videos list error: ${e instanceof Error?e.message:"Unknown error"}`,e),{success:!1,message:e instanceof Error?e.message:"Failed to retrieve videos"}}}}let l=null;function p(){if(!l)throw new Error("SDK not initialized. Call authVideonest() first.");return l}e.VideonestEmbed=({videoId:e,style:t={}})=>{const[n,i]=o.useState(!1);c("VideonestEmbed props:",{videoId:e,style:t}),o.useEffect((()=>{try{p(),i(!0)}catch(e){i(!1)}c("VideonestEmbed SDK initialized:",n)}),[]);let a=`https://app.videonest.co/newEmbed/single/${e}`;const s=[];return t.primaryColor&&s.push(`primaryColor=${t.primaryColor.replace("#","")}`),!0===t.darkMode?s.push("darkMode=true"):!1===t.darkMode&&s.push("darkMode=false"),!0===t.hideVideoDetails?s.push("hideVideoDetails=true"):!1===t.hideVideoDetails&&s.push("hideVideoDetails=false"),s.length>0&&(a+=`?${s.join("&")}`),c("Creating React element with SDK initialized:",n),n?o.createElement("iframe",{src:a,width:t.width||"100%",height:t.height||"400px",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,title:`Videonest video ${e}`}):o.createElement("div",null,"Please initialize Videonest SDK first using authVideonest()")},e.authVideonest=async function(e,t){return l=new h({channelId:e,apiKey:t}),u("AUTHENTICATE FORCE LOG METHOD CALLED DIRECTLY",l),await l.authenticate()},e.getClient=p,e.getVideoStatus=async function(e){return p().getVideoStatus(e)},e.isDebugModeEnabled=function(){return r},e.listVideos=async function(){return p().listVideos()},e.setDebugMode=function(e){r=e,e?(s.default.enable("videonest-sdk"),"undefined"!=typeof window&&window.localStorage.setItem("debug","videonest-sdk"),console.log("[videonest-sdk] Debug mode enabled")):(s.default.disable(),"undefined"!=typeof window&&window.localStorage.removeItem("debug"))},e.uploadVideo=async function(e,t){return p().uploadVideo(e,t)},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=videonest-sdk.umd.js.map
